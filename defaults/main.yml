---

# User and group for bind
bind9_user: bind
bind9_group: bind

# Listen on IPv6 interfaces
bind9_ipv6: yes

# Run bind as a DNS recursor?
# variable used only by default templates, not strict_authoritative
bind9_recursor: no

# Run bind as authoritative nameserver?
# variable by default templates and as conditionnal of several tasks
# If using `strict_authoritative/` templates, this variable _must_ be true
bind9_authoritative: "{{ true if bind9_templates == 'strict_authoritative/' else false }}"

# run bind with forwarding?
bind9_forward: no

# Setup DNSSEC for recursor and zones?
bind9_dnssec: no

# set QNAME minimization behavior in the BIND resolver; atm bind9 default is relaxed
bind9_qname_minimization: "relaxed"

# DNSSEC validation mode (yes/no/auto)
bind9_dnssec_validation: "auto"

# Run bind as a hidden master (i.e. limit queries to our_networks)
bind9_hidden_master: no

# Only notify nameservers from also-notify, not from the zone NS records.
# Necessary to keep traffic between nameservers in private network.
bind9_notify_explicit: no

# bind9_notify: '{{ "explicit" if bind9_notify_explicit else undef }}'
# undef doesn't work here. f**k legacy bind9_notify_explicit variable?

# Default zone type
bind9_zone_type: master

## //!\\ Several of the following variables have different meanings or (no meaning at all) depending on the templates' set you use
## See here after bind9_template variable.

# Permitted hosts/networks for recursion (when configured as recursor)
# variable used only by default templates, not strict_authoritative
bind9_our_networks:
  - localhost
  - localnets

# Permitted hosts/networks for zone transfers
# variable used only by default templates, not strict_authoritative
bind9_our_neighbors:
  - localhost
  - localnets

# Install custom rndc.key
bind9_rndc_algorithm: hmac-md5
# bind9_rndc_key:

# Global primaries for all zones (if configured as secondary), default masters if not defined in the zone
# bind9_masters:
#  - name: ns-primary
#    addresses:
#      - 1.2.3.4
# For BIND 9.17.3 (not yet in debian): https://downloads.isc.org/isc/bind9/9.17.3/doc/arm/html/notes.html#feature-changes
# Let's progressively rename this variable with bind's preferred terminology:
# bind9_primaries: "{{ bind9_masters }}"

# Primaries for particular zones (if configured as secondary), that can also be used in also-notify directives
# bind9_masters_extra:
#  - name: "ns-primary"
#    addresses:
#      - 1.2.3.4
# Let's progressively rename this variable with bind's preferred terminology:
# bind9_primaries_extra: "{{ bind9_masters_extra }}"

# Global secondaries for all zones (if configured as primary), default slaves if not specifically defined for the zone
# bind9_slaves:
#  - 1.2.3.4
#
# Let's progressively rename this variable with bind's preferred terminology:
# bind9_secondaries: "{{ bind9_slaves }}"

# bind9_acl:
# undefined by default, this variable allows to define a set of several access control lists (ACL)
# with the same format as `bind9_masters`, and use it in slaves. allow-query or allow-transfer definitions 

# bind9_also_notify:
# undefined by default, a list of IPs or masters lists to be defined as global `notify-also` list in configuration.

# bind9_also_allow_transfer:
# bind9_also_allow_transfer: '{{ bind9_also_notify if bind9_also_notify is defined else undef }}'
# defaults to bind9_also_notify, but this definitio must be overwritten if this vairable contains masters names.
# As far as bind9_also_notify is just a list of IPs, default values of the role take advantage of the similar strucuture
# in YAML for lasters lists and ACLs, and the can by default allow transfer, zone by zone, to slaves and also notify IPS 

# bind9_also_allow_transfer
#bind9_also_allow_transfer: '{{ bind9_also_notify if bind9_also_notify is defined else undef }}'
# for primary zones, except if `allow_transfer` is explicitly defined for the zone, by default an `allow-transfer` list
# will be set, iincluding slave NS of the host and either the list also_allow_transfer defined for the zone, either this
# default list.
# If `bind9_also_notify` is defined by default `bind9_also_allow_transfer` has the same values.
# But be carefull: in BIND9 configuration, `also-notify` may include `masters` lists but not `acl` ones, while
# `allow-transfer` may include `acl` lists but not `masters` ones. In YAML role's variables structures are identical, but
# if they appear in BIND configuration list inclusions it will fail.
# Practically: if you use `masters` lists (defined with `bind9_masters`or `bind9_masters_extra` variables of this role),
# yo must re-define separately `bind9_also_allow_transfer`, probably defining an ACL with same values than master lists. 

# Enable BIND's XML statistics-channels (for monitoring purposes)
bind9_statistics_enabled: False

# DNS zones
# bind9_zone_dynamic: zone files created from template (see
#         `templates/bind/zones/db.template.j2` for yaml structure)
# bind9_zone_static:  zone files copied from `files/bind/zones/`
bind9_zones_dynamic: []
bind9_zones_static: []

# With this value, the `copy` module will look for zone files in `files/bind/zones/` in the playbook directory
bind9_zone_files: bind/zones/
# Overwrite, for instance if you want to put your db.* zone files in your host vars:
# bind9_zone_files: '{{ playbook_dir }}/host_vars/{{ ansible_hostname }}/files/bind/zones/'

# Authoritative include files
bind9_authoritative_includes: []

# DNSSEC is activated for all DNS zones per default
bind9_dnssec_zones_default_enabled: true

# Send DNSSEC KSK in DNSKEY and DS format over XMPP after it got created
bind9_dnssec_notify_xmpp: no
bind9_dnssec_notify_xmpp_user: user@jabber.example.org
bind9_dnssec_notify_xmpp_password: insecure
bind9_dnssec_notify_xmpp_rcpt: admin@jabber.example.org
bind9_dnssec_notify_xmpp_host: "{{ ansible_jabber_host|default('localhost') }}"

# Send DNSSEC KSK in DNSKEY and DS format over matrix webhook after it got created
bind9_dnssec_notify_matrix: no
bind9_matrix_notifier_url: ""

bind9_matrix_notifier_format: plain
bind9_matrix_notifier_text: ""
bind9_matrix_notifier_display_name: Ansible
bind9_matrix_notifier_avatar_url: https://cdn.icon-icons.com/icons2/2389/PNG/512/ansible_logo_icon_145495.png

bind9_matrix_notifier_body:
  text: "{{ bind9_matrix_notifier_text }}"
  format: "{{ bind9_matrix_notifier_format }}"
  displayName: "{{ bind9_matrix_notifier_display_name }}"
  avatarUrl: "{{ bind9_matrix_notifier_avatar_url }}"


# Install monit file for bind9 named
bind9_monit_enabled: no

bind9_packages:
  - bind9
  - dnsutils

# Directory for bind9 files templates
bind9_templates: ""
# The role can handle different sets of templates for bind and zones configuration.
# It presently proposes two sets of templates:
# * the defaults one, "", wich is a general purpose configuration set, that has evolved with the role.
#   It's files live in {{ role_path }}/templates/ directory
# * a second new set for a strict authoritative bind NS server: `strict_authoritative` It accepts DNS queries only for zones it is authoritative for.
#   allow-transfer for secunday NS servers, notify-also for hidden slaves, and even allow-query and notify can be defined zone by zone.
#   It's files live in {{ role_path }}/templates/strict_authoritative/ directory
#   Note that several default variables `bind9_*` have different meanings than with default templates' set.
# bind9_templates nust be set as a relative or absolute directory, including it's trailing "/":
# bind9_templates: strict_authoritative/
# You can set your own templates, for example with:
# bind9_templates: "{{ playbook_dir }}/host_vars/<my_host>/templates/"

# Logging
bind9_named_logging: False
bind9_log_path: /var/log/bind
bind9_log_severity: warning  # critical | error | warning | notice | info | debug [ level ] | dynamic
bind9_log_versions: 3
bind9_log_size: 60m           # Time units

bind9_log_categories:
  - name: default
    destination: bind_log
  - name: update
    destination: bind_log
  - name: update-security
    destination: bind_log
  - name: security
    destination: default_syslog
  - name: queries
    destination: bind_log
  - name: lame-servers
    destination: 'null'
